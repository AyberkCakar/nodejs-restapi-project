-- MySQL Script generated by MySQL Workbench
-- Mon Jul  6 22:56:58 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema My-Fis
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `My-Fis` ;

-- -----------------------------------------------------
-- Schema My-Fis
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `My-Fis` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `My-Fis` ;

-- -----------------------------------------------------
-- Table `tblAdminStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblAdminStatus` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblAdminStatus` (
  `AdminStatusID` INT NOT NULL AUTO_INCREMENT,
  `AdminStatusName` VARCHAR(20) NULL,
  PRIMARY KEY (`AdminStatusID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblPage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblPage` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblPage` (
  `PageID` INT NOT NULL AUTO_INCREMENT,
  `PageTitle` VARCHAR(250) NULL,
  `PageContent` TEXT NULL,
  `PageDateTime` DATETIME NULL,
  `PagePicturePath` VARCHAR(100) NULL,
  `PageDescription` TEXT NULL,
  `PageKeywords` TEXT NULL,
  `PageStatusID` INT NULL,
  PRIMARY KEY (`PageID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblPageStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblPageStatus` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblPageStatus` (
  `PageStatusID` INT NOT NULL AUTO_INCREMENT,
  `PageStatusName` VARCHAR(30) NULL,
  PRIMARY KEY (`PageStatusID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblSlide`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblSlide` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblSlide` (
  `SlideID` INT NOT NULL AUTO_INCREMENT,
  `SlideTitle` VARCHAR(200) NULL,
  `SlideUrl` TEXT NULL,
  `SlidePicPath` TEXT NULL,
  PRIMARY KEY (`SlideID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblStateAgency`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblStateAgency` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblStateAgency` (
  `StateAgencyID` INT NOT NULL AUTO_INCREMENT,
  `StateAgencyName` VARCHAR(30) NULL,
  `StateAgencyNo` BIGINT(10) NULL,
  `StateAgencyEmail` VARCHAR(40) NULL,
  PRIMARY KEY (`StateAgencyID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblStateAgencyAdmin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblStateAgencyAdmin` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblStateAgencyAdmin` (
  `StateAgencyAdminID` INT NOT NULL AUTO_INCREMENT,
  `StateAgencyAdminFirstName` VARCHAR(30) NULL,
  `StateAgencyAdminLastName` VARCHAR(30) NULL,
  `StateAgencyAdminIdentityNo` bigint(11) NULL,
  `StateAgencyAdminEmail` VARCHAR(40) NULL,
  `StateAgencyAdminPassword` VARCHAR(99) NULL,
  `AdminStatusID` INT NULL,
  `StateAgencyID` INT NULL,
  PRIMARY KEY (`StateAgencyAdminID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblStatusAuth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblStatusAuth` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblStatusAuth` (
  `StatusAuthID` INT NOT NULL AUTO_INCREMENT,
  `StatusAuthName` VARCHAR(40) NULL,
  `AdminStatusID` INT NULL,
  PRIMARY KEY (`StatusAuthID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblUser` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblUser` (
  `UserID` INT NOT NULL AUTO_INCREMENT,
  `UserFirstName` VARCHAR(30) NULL,
  `UserLastName` VARCHAR(20) NULL,
  `UserIdentityNo` BIGINT(11) NULL,
  `UserPassword` VARCHAR(99) NULL,
  PRIMARY KEY (`UserID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblUserDetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblUserDetails` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblUserDetails` (
  `UserDetailsID` INT NOT NULL AUTO_INCREMENT,
  `UserAdressCity` VARCHAR(15) NULL,
  `UserAdressDistrict` VARCHAR(25) NULL,
  `UserAdressStreet` VARCHAR(25) NULL,
  `UserAdressNo` VARCHAR(10) NULL,
  `UserAdressApartmentName` VARCHAR(20) NULL,
  `UserEmail` VARCHAR(40) NULL,
  `UserPhone` VARCHAR(15) NULL,
  `UserFamilyPeopleCount` INT NULL,
  `UserID` INT NULL,
  PRIMARY KEY (`UserDetailsID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblUserFamily`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblUserFamily` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblUserFamily` (
  `UserFamilyID` INT NOT NULL AUTO_INCREMENT,
  `UserIdentityNo` BIGINT(11) NULL,
  `UserID` INT NULL,
  PRIMARY KEY (`UserFamilyID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblUserLocations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblUserLocations` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblUserLocations` (
  `UserLocationsID` INT NOT NULL AUTO_INCREMENT,
  `UserLocationsLat` FLOAT NULL,
  `UserLocationsLon` FLOAT NULL,
  `UserLocationsLastDate` DATETIME NULL,
  `UserID` INT NULL,
  PRIMARY KEY (`UserLocationsID`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `tblUserState`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tblUserState` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `tblUserState` (
  `UserStateID` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NULL,
  `UserState` SMALLINT(3) NULL,
  PRIMARY KEY (`UserStateID`))
ENGINE = InnoDB;

SHOW WARNINGS;
USE `My-Fis` ;

-- -----------------------------------------------------
-- function drop AdminLogin and UserLogin
-- -----------------------------------------------------

DROP function IF EXISTS `AdminLogin`;
DROP function IF EXISTS `UserLogin`;

-- -----------------------------------------------------
-- procedure UserLogin
-- -----------------------------------------------------

USE `My-Fis`;
DROP procedure IF EXISTS `UserLogin`;
SHOW WARNINGS;

DELIMITER $$
USE `My-Fis`$$
CREATE PROCEDURE `UserLogin` ( IN UserIdentityNo bigint(11), IN UserPassword VARCHAR(99)  )
BEGIN
    select U.UserID,U.UserIdentityNo,U.UserFirstName,U.UserLastName ,UD.UserAdressCity,UD.UserAdressDistrict,
    UD.UserAdressStreet ,UD.UserAdressNo ,UD.UserAdressApartmentName, UD.UserEmail ,UD.UserPhone , UD.UserFamilyPeopleCount
    from tblUser U inner join tblUserDetails UD on U.UserID=UD.UserID 
    where U.UserIdentityNo = UserIdentityNo and U.UserPassword = UserPassword;
END;$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure AdminLogin
-- -----------------------------------------------------

USE `My-Fis`;
DROP procedure IF EXISTS `AdminLogin`;
SHOW WARNINGS;

DELIMITER $$
USE `My-Fis`$$
CREATE PROCEDURE `AdminLogin` ( IN AdminIdentitiyNo bigint(11),   IN AdminPassword VARCHAR(99)  )
BEGIN
    select SAA.StateAgencyAdminID, SAA.StateAgencyAdminIdentityNo , SAA.StateAgencyAdminFirstName, SAA.StateAgencyAdminLastName,
    AST.AdminStatusName, SA.StateAgencyName
    from tblStateAgencyAdmin SAA inner join tblAdminStatus AST  on SAA.AdminStatusID = AST.AdminStatusID
    inner join tblStateAgency SA on SAA.StateAgencyID = SA.StateAgencyID
    where SAA.StateAgencyAdminIdentityNo = AdminIdentitiyNo and SAA.StateAgencyAdminPassword = AdminPassword;
END;$$

DELIMITER ;
SHOW WARNINGS;


-- -----------------------------------------------------
-- procedure UserSignUp
-- -----------------------------------------------------

USE `My-Fis`;
DROP procedure IF EXISTS `UserSignUp`;
SHOW WARNINGS;

DELIMITER $$
USE `My-Fis`$$
CREATE PROCEDURE `UserSignUp` ( IN User_FirstName varchar(30), IN User_LastName varchar(20),
                                            IN User_IdentityNo bigint(11), IN User_Password varchar(99),
                                            IN User_City varchar(15), IN User_District varchar(25),
                                            IN User_Street varchar(25), IN User_No varchar(10),
                                            IN User_ApartmentName varchar(20), IN User_Email varchar(40),
                                            IN User_Phone varchar(15), IN User_FamilyPeopleCount int  )
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
    END;
    START TRANSACTION;
		INSERT INTO tblUser (UserFirstName,UserLastName,UserIdentityNo,UserPassword) VALUES ( User_FirstName,User_LastName,User_IdentityNo,User_Password);
		INSERT INTO tblUserDetails (UserAdressCity,UserAdressDistrict,UserAdressStreet,UserAdressNo,UserAdressApartmentName,UserEmail,UserPhone,UserFamilyPeopleCount,UserID)
		VALUES (User_City,User_District,User_Street,User_No,User_ApartmentName,User_Email,User_Phone,User_FamilyPeopleCount,
		        (Select UserID FROM tblUser ORDER BY UserID DESC LIMIT 1));
	COMMIT;
END$$

DELIMITER ;
SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- procedure AdminSignUp
-- -----------------------------------------------------

USE `My-Fis`;
DROP procedure IF EXISTS `AdminSignUp`;
SHOW WARNINGS;

DELIMITER $$
USE `My-Fis`$$
CREATE PROCEDURE `AdminSignUp` ( IN AdminFirstName VARCHAR(30), IN AdminLastName VARCHAR(30),IN AdminIdentityNo BIGINT(11),
IN AdminPassword VARCHAR(99),  IN AdminEmail VARCHAR(40), IN StatusName VARCHAR(40), IN AgencyName VARCHAR(30))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
    END;
    START TRANSACTION;
		INSERT INTO tblStateAgencyAdmin (StateAgencyAdminFirstName,StateAgencyAdminLastName,StateAgencyAdminIdentityNo,
		                                 StateAgencyAdminEmail,StateAgencyAdminPassword,AdminStatusID,StateAgencyID)
		VALUES (AdminFirstName,AdminLastName,AdminIdentityNo,
		        AdminEmail,AdminPassword,
		        (Select AdminStatusID from tblAdminStatus where AdminStatusName=StatusName),
		        (Select StateAgencyID from tblStateAgency where StateAgencyName=AgencyName));
	COMMIT;
END$$

DELIMITER ;
SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;